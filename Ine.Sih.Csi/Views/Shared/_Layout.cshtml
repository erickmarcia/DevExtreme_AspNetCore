<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>Módulo CSI</title>
    <link href="..\\img\\home\\CsiLayout.png" rel="shortcut icon" type="image/x-icon" />

    @* Uncomment to use the HtmlEditor control *@
    @* <script src="https://unpkg.com/devextreme-quill/dist/dx-quill.min.js"></script> *@

    @*<link rel="stylesheet" href="~/css/thirdparty.bundle.css" />
    <link rel="stylesheet" href="~/css/Site.css" />
    <script src="~/js/thirdparty.bundle.js"></script>*@
    @*<script src="~/js/site.js" asp-append-version="true"></script>*@

    <link rel="stylesheet" href="~/css/vendor.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/Site.css" />
    <script src="~/js/vendor.js" asp-append-version="true"></script>

</head>

<body class="dx-viewport">
    <div id="app-side-nav-outer-toolbar">
        <div class="layout-header">
            @{var modulos = new string[] { "Inspecciones", "Registro Central", "Cálculo de Precios GLP", "Control y Seguimiento de Inventarios" };}
            @(Html.DevExtreme().Toolbar()
                .Items(items =>
                {
                items.Add()
                    .Widget(w => w
                        .Button()
                        .Icon("menu")
                        .OnClick("Ine_Sih_Csi.onMenuButtonClick")
                    )
                    .Location(ToolbarItemLocation.Before)
                    .CssClass("menu-button");
                items.Add()
                    .Html("<div>Sistema de Información de Hidrocarburos&nbsp;|&nbsp;&nbsp;Módulo:&nbsp;</div>")
                    .Location(ToolbarItemLocation.Before)
                    .CssClass("header-title");
                items.Add()
                    .Widget(filtroModulos => filtroModulos
                        .SelectBox()
                        .DataSource(modulos)
                        .Value(modulos[0])
                        .Width(300))
                 .Location(ToolbarItemLocation.Before);
             })
            )
        </div>
        <div class="layout-body layout-body-hidden">
            @(Html.DevExtreme().Drawer()
                .ID("layout-drawer")
                .Position(DrawerPosition.Left)
                .Opened(new JS("Ine_Sih_Csi.restoreDrawerOpened()"))
                .Content(@<text>
                    <div id="layout-drawer-scrollview" class="with-footer">
                        <div class="content">
                            @RenderBody()
                        </div>
                        <div class="content-block">
                            <div class="content-footer">
                                <div id="footer">
                                    ©2021 Instituto Nicaragüense de Energía | Ente Regulador.
                                    <br />
                                    Todas las marcas comerciales o marcas comerciales registradas son propiedad de sus respectivos dueños.
                                </div>
                            </div>
                        </div>
                    </div>
                </text>)
                .Template(new TemplateName("navigation-menu"))
            )
        </div>
    </div>

    @using(Html.DevExtreme().NamedTemplate("navigation-menu")) {
<div class="menu-container dx-swatch-additional">

    @functions{
        string GetUrl(string action) => Url.Action(action);
        string GetCurrentUrl() => Url.Action(ViewContext.RouteData.Values["action"].ToString());
        bool IsCurrentUrl(string pageName) => GetUrl(pageName) == GetCurrentUrl();
    }



    @(Html.DevExtreme().TreeView()
         .Items(items =>
         {
             items.Add()
                .Text("Inicio")
                .Icon("..\\img\\home\\CsiLayoutInicio.svg")
                .Option("path", GetUrl("Index"))
                .Selected(IsCurrentUrl("Index"))
                ;
             items.Add()
                 .Text("Tablero")
                 .Icon("..\\img\\home\\CsiLayoutTablero.svg")
                 .Option("path", GetUrl("Tablero"))
                 .Selected(IsCurrentUrl("Tablero"));
             items.Add()
                 .Text("Reportes")
                 .Icon("..\\img\\home\\CsiLayoutTablero.svg")
                 .Option("path", GetUrl("Viewer"))
                 .Selected(IsCurrentUrl("Viewer"));
                items.Add()
                     .Text("Ayuda")
                     .Icon("help")
                     .Option("path", GetUrl("Ayuda"))
                     .Selected(IsCurrentUrl("Ayuda"))
                     ;
             /*
             
             
             
             
             items.Add()
                 .Text("Catálogos")
                 .Html("")
                 .Icon("..\\img\\home\\CsiLayoutCatalogos.svg")
                 .Expanded(false)
                 .Items(catalogos => catalogos.Add()
                     .Icon("..\\img\\home\\CsiLayoutCatalogosNodos.svg")
                     .Text("Puertos"))
                 .Items(buques => buques.Add()
                     .Icon("..\\img\\home\\CsiLayoutCatalogosNodos.svg")
                     .Text("Buques"));
             items.Add()
                 .Text("Acerca de")
                 .Icon("..\\acercade.svg")
                 .Option("path", Url.Page("About"))
                 .Selected(IsCurrentPage("About"));
             */
         })
         //.DataStructure(TreeViewDataStructure.Tree)
         .SelectionMode(NavSelectionMode.Single)
         .SelectedExpr("selected")
         .FocusStateEnabled(false)
         .Width(250)
         .OnItemClick("Ine_Sih_Csi.onTreeViewItemClick")
    )
</div>
    }

    <script>

        var Ine_Sih_Csi = (function() {

            var DRAWER_OPENED_KEY = "Ine_Sih_Csi-drawer-opened";

            var breakpoints = {
                xSmallMedia: window.matchMedia("(max-width: 599.99px)"),
                smallMedia: window.matchMedia("(min-width: 600px) and (max-width: 959.99px)"),
                mediumMedia: window.matchMedia("(min-width: 960px) and (max-width: 1279.99px)"),
                largeMedia: window.matchMedia("(min-width: 1280px)")
            };

            function getDrawer() {
                return $("#layout-drawer").dxDrawer("instance");
            }

            function restoreDrawerOpened() {
                var isLarge = breakpoints.largeMedia.matches;
                if(!isLarge)
                    return false;

                var state = sessionStorage.getItem(DRAWER_OPENED_KEY);
                if(state === null)
                    return isLarge;

                return state === "true";
            }

            function saveDrawerOpened() {
                sessionStorage.setItem(DRAWER_OPENED_KEY, getDrawer().option("opened"));
            }

            function updateDrawer() {
                var isXSmall = breakpoints.xSmallMedia.matches,
                    isLarge = breakpoints.largeMedia.matches;

                getDrawer().option({
                    openedStateMode: isLarge ? "shrink" : "overlap",
                    revealMode: isXSmall ? "slide" : "expand",
                    minSize: isXSmall ? 0 : 60,
                    shading: !isLarge,
                });
            }

            function init() {
                $("#layout-drawer-scrollview").dxScrollView({ direction: "vertical" });

                $.each(breakpoints, function(_, size) {
                    size.addListener(function(e) {
                        if(e.matches)
                            updateDrawer();
                    });
                });

                updateDrawer();

                $('.layout-body').removeClass('layout-body-hidden');
            }

            function navigate(url, delay) {
                if(url)
                    setTimeout(function() { location.href = url }, delay);
            }

            function onMenuButtonClick() {
                getDrawer().toggle();
                saveDrawerOpened();
            }

            function onTreeViewItemClick(e) {
                var drawer = getDrawer();
                var savedOpened = restoreDrawerOpened();
                var actualOpened = drawer.option("opened");

                if(!actualOpened) {
                    drawer.show();
                } else {
                    var willHide = !savedOpened || !breakpoints.largeMedia.matches;
                    var willNavigate = !e.itemData.selected;

                    if(willHide)
                        drawer.hide();

                    if(willNavigate)
                        navigate(e.itemData.path, willHide ? 400 : 0);
                }
            }

            return {
                init: init,
                restoreDrawerOpened: restoreDrawerOpened,
                onMenuButtonClick: onMenuButtonClick,
                onTreeViewItemClick: onTreeViewItemClick
            };
        })();

        document.addEventListener("DOMContentLoaded", function documentReady() {
            this.removeEventListener("DOMContentLoaded", documentReady);
            Ine_Sih_Csi.init();
        });
    </script>
</body>

</html>
