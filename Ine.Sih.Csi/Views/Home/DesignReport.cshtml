@using DevExpress.AspNetCore
@using DevExpress.XtraReports.UI

@*@model AspNetCore.Reporting.Common.Models.ReportingControlModel*@
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf
@functions{
    public string GetAntiXsrfRequestToken() {
        return Xsrf.GetAndStoreTokens(this.Context).RequestToken;
    }
}
<script>
    function DesignerBeforeRender(args) {
        var designer = args.designerModel;
        SetupJwt('you can pass bearer here', "@GetAntiXsrfRequestToken()");
        $(window).on('beforeunload', function(e) {
            if(designer.isDirty()) {
                designer.navigateByReports.closeAll().done(function() {
                    return;
                });
                return "Designer have changes";
            }
        });
    }

    function CustomizeLocalization(s, e){
        e.LoadMessages($.get("/localization/reporting/dx-analytics-core.de.json"));
        e.LoadMessages($.get("/localization/reporting/dx-reporting.de.json"));
        e.LoadMessages($.get("/localization/devextreme/de.json").done(function(messages) { DevExpress.localization.loadMessages(messages); }));
        e.SetAvailableCultures(["de"]);
    }
    function Exit() {
        window.location = "/";
    }
</script>
<input type="hidden" id="RequestVerificationToken" name="RequestVerificationToken" value="@GetAntiXsrfRequestToken()">
@{
    ViewData["Title"] = Model.Title;
    var designerRender = Html.DevExpress().ReportDesigner("ReportDesigner")
        .Height("800px")
        .AutoBind(false)
        .QueryBuilderHandlerUri("/DXXQBMVC")
        .ReportDesignerHandlerUri("/DXXRDMVC")
        .ReportPreviewHandlerUri("/DXXRDVMVC")
        .ClientSideModelSettings(clientSide => {
            clientSide.IncludeLocalization = false;
        })
        .ClientSideEvents(events => {
            events.CustomizeLocalization("CustomizeLocalization");
            events.BeforeRender("DesignerBeforeRender");
            events.ExitDesigner("Exit");
        });
    if(string.IsNullOrEmpty(Model.Id)) {
        designerRender.Bind(new XtraReport());
    } else {
        designerRender.Bind(Model.Id);
    }
    @:@designerRender.Build("reportDesignerOptions")
}

@section Scripts {
    <link href="~/css/dx-reporting-skeleton-screen.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/css/viewer.part.bundle.css" />
    <link rel="stylesheet" href="~/css/designer.part.bundle.css" />

    <script src="~/js/reporting.thirdparty.bundle.js"></script>
    <script src="~/js/viewer.part.bundle.js"></script>
    <script src="~/js/designer.part.bundle.js"></script>

    <script type="text/javascript">
        (function() {
            ko.applyBindings({ reportDesignerOptions: @designerRender });
        })()
    </script>
}

