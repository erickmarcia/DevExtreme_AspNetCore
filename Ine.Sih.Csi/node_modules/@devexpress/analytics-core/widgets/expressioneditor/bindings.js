/**
* DevExpress Analytics (widgets\expressioneditor\bindings.js)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var $ = require("jquery");
var expressioneditor_1 = require("./expressioneditor");
var _internal_1 = require("../../serializer/_internal");
var templateUtils_1 = require("../../property-grid/widgets/templateUtils");
ko.bindingHandlers['dxExpressionEditor'] = {
    init: function (element, valueAccessor, allBindings, viewModel, bindingContext) {
        var $element = $(element);
        $element.children().remove();
        $(element).addClass('dx-popup-general');
        var values = valueAccessor();
        var templateName = values.editorTemplateName || 'dx-expressioneditor';
        var templateHtml = templateUtils_1.getTemplate(templateName), $element = $element.append(templateHtml);
        var optionSubscription = null;
        var editor = new expressioneditor_1.ExpressionEditor(ko.unwrap(values.options), values.fieldListProvider, viewModel.disabled, $(element).closest('.dx-rtl').length > 0, values.displayNameProvider, values.popupVisible);
        if (ko.isSubscribable(values.options)) {
            optionSubscription = values.options.subscribe(function (newOptions) {
                newOptions && editor.koOptions(newOptions);
            });
        }
        var child = $element.children()[0];
        ko.applyBindings(editor, child);
        var callback = function () {
            editor.dispose();
            editor = null;
            optionSubscription && optionSubscription.dispose();
        };
        _internal_1.addDisposeCallback(element, callback);
        return { controlsDescendantBindings: true };
    }
};
