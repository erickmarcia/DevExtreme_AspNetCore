/**
* DevExpress Analytics (widgets\filtereditor\helpers\_addon.js)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ko = require("knockout");
var FilterEditorAddOn = (function () {
    function FilterEditorAddOn(criteria, popupService, action, propertyName, templateName) {
        var _this = this;
        this.showPopup = function (_, element) {
            if (_this._popupService['subscription']) {
                _this._popupService['subscription'].dispose();
            }
            _this._popupService.title('');
            _this.target.isSelected(true);
            _this._updateActions(_this.target);
            _this._popupService.target(element);
            setTimeout(function () {
                _this._popupService.visible(true);
            }, 10);
        };
        this.popupContentTemplate = 'dx-filtereditor-popup-common';
        this.target = criteria;
        this._action = action;
        this.propertyName = propertyName;
        this._popupService = popupService;
        this.popupContentTemplate = templateName || this.popupContentTemplate;
    }
    FilterEditorAddOn.prototype._updateActions = function (viewModel) {
        var _this = this;
        this._popupService.data(null);
        if (viewModel) {
            this._popupService['subscription'] = this._popupService.visible.subscribe(function (newVal) {
                _this.target.isSelected(newVal);
            });
            this._popupService['viewModel'] = viewModel;
            this._popupService.data({
                data: ko.unwrap(viewModel[this.propertyName]),
                template: this.popupContentTemplate,
                click: function (data) {
                    viewModel[_this._action](data);
                    _this._popupService.visible(false);
                },
            });
        }
    };
    return FilterEditorAddOn;
}());
exports.FilterEditorAddOn = FilterEditorAddOn;
