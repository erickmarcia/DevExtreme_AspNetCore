/**
* DevExpress HTML/JS Reporting (chart\internal\chartStructure\_controller.js)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_internal_1 = require("@devexpress/analytics-core/analytics-internal");
var ChartStructureTreeListController = (function (_super) {
    __extends(ChartStructureTreeListController, _super);
    function ChartStructureTreeListController(propertyNames, listPropertyNames, selectCallback) {
        var _this = _super.call(this, propertyNames, listPropertyNames) || this;
        _this.hasItems = function (item) {
            return !!listPropertyNames && listPropertyNames.indexOf(item.specifics) !== -1;
        };
        _this.select = function (value) {
            _this.selectedItem && _this.selectedItem.isSelected(false);
            _this.selectedItem = value;
            value.isSelected(true);
            selectCallback && selectCallback(value);
        };
        _this.showIconsForChildItems = function (parent) {
            if (parent === void 0) { parent = null; }
            return parent === null || parent.level < 1;
        };
        return _this;
    }
    return ChartStructureTreeListController;
}(analytics_internal_1.ObjectStructureTreeListController));
exports.ChartStructureTreeListController = ChartStructureTreeListController;
