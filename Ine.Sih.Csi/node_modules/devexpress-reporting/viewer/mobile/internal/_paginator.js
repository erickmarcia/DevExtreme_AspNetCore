/**
* DevExpress HTML/JS Reporting (viewer\mobile\internal\_paginator.js)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var analytics_utils_1 = require("@devexpress/analytics-core/analytics-utils");
var ko = require("knockout");
var $ = require("jquery");
var MobilePaginator = (function () {
    function MobilePaginator(reportPreview, gallery) {
        var _this = this;
        this.visible = ko.observable(false).extend({ notify: 'always' });
        this.text = ko.computed(function () {
            setTimeout(function () { _this.visible(true); }, 1);
            if (reportPreview.pageIndex() === -1) {
                return analytics_utils_1.getLocalization('0 pages', 'ASPxReportsStringId.WebDocumentViewer_0Pages');
            }
            else {
                var ofText = analytics_utils_1.getLocalization('of', 'ASPxReportsStringId.ToolBarItemText_OfLabel');
                var pageText = analytics_utils_1.getLocalization('Page', 'ASPxReportsStringId.ToolBarItemText_PageLabel');
                return pageText + ' ' + gallery.currentBlockText() + ' ' + ofText + ' ' + reportPreview.pages().length;
            }
        });
    }
    return MobilePaginator;
}());
exports.MobilePaginator = MobilePaginator;
ko.bindingHandlers['dxrdMobilePaginator'] = {
    init: function (element, valueAccessor) {
        var values = valueAccessor();
        var $element = $(element);
        var timeoutId = null;
        var hideAnimationTimeoutId = null;
        values.visible.subscribe(function (newVal) {
            if (newVal) {
                $element.removeClass('dxrdp-hide').addClass('dxrdp-show');
                timeoutId && clearTimeout(timeoutId);
                timeoutId = setTimeout(function () { values.visible(false); }, 2000);
            }
            else {
                $element.removeClass('dxrdp-show').addClass('dxrdp-hide');
                hideAnimationTimeoutId && clearTimeout(hideAnimationTimeoutId);
                hideAnimationTimeoutId = setTimeout(function () {
                    $element.removeClass('dxrdp-hide');
                }, 500);
            }
        });
    }
};
