/**
* DevExpress HTML/JS Reporting (designer\widgets\reportExpressionEditor.d.ts)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { WrappedExpressionOptions } from '../dataObjects/expressions/_wrappedExpressionOptions';
import { Disposable } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
import { Editor } from '@devexpress/analytics-core/analytics-widgets';
export declare class ReportExpressionEditorAdapter extends Disposable {
    private values;
    value: ko.Observable<WrappedExpressionOptions> | ko.Computed<WrappedExpressionOptions>;
    constructor(values: ko.Observable<any[]> | ko.Computed<any[]>, value: ko.Observable<WrappedExpressionOptions> | ko.Computed<WrappedExpressionOptions>);
    patchOptions(reportExplorerProvider: any): boolean;
    private _createReportItems;
    private _createValuesTab;
    popupVisible: ko.Observable<boolean>;
}
export declare class ReportExpressionEditor extends Editor {
    private _adapter;
    constructor(modelPropertyInfo: any, level: any, parentDisabled?: ko.Computed<boolean>, textToSearch?: any);
    patchOptions(reportExplorerProvider: any): boolean;
    popupVisible: ko.Observable<boolean>;
    value: ko.Computed<WrappedExpressionOptions>;
}
