/**
* DevExpress HTML/JS Reporting (designer\internal\_reportConverter.d.ts)
* Version:  20.2.5
* Build date: Jan 18, 2021
* Copyright (c) 2012 - 2021 Developer Express Inc. ALL RIGHTS RESERVED
* License: https://www.devexpress.com/Support/EULAs/universal.xml
*/
import { ObjectStorageItem } from '../dataObjects/objectStorageItem';
import { ReportViewModel } from '../controls/xrReport';
import { UndoEngine } from '@devexpress/analytics-core/analytics-utils';
import * as ko from 'knockout';
export interface IRulesDictionaryItem {
    condition: string;
    dataMember: string;
    dataSource: ObjectStorageItem;
    formatting: any;
}
export declare class ReportConverter {
    private _controlsHelper;
    private _undoEngine;
    private _dataBindingMode;
    private convertChoiceEnum;
    private _formattingMapper;
    private _mapRulesProperties;
    private _expressionsToControlMap;
    private _model;
    private _lastChoice;
    private _defaultFormatting;
    private _notShowAgain;
    private _detailLink;
    popupOptions: {
        visible: ko.Observable<boolean>;
        title: any;
        confirmMessage: string;
        linkText: any;
        linkUrl: string;
        container: (element: HTMLElement) => JQuery<HTMLElement>;
        buttons: ({
            toolbar: string;
            location: string;
            widget: string;
            options: {
                text: any;
                onClick: () => void;
                value?: undefined;
            };
        } | {
            toolbar: string;
            location: string;
            widget: string;
            options: {
                value: ko.Observable<boolean>;
                text: any;
                onClick?: undefined;
            };
        })[];
    };
    constructor(_controlsHelper: any, _undoEngine: ko.Observable<UndoEngine> | ko.Computed<UndoEngine>, _dataBindingMode?: string);
    private _hasBindings;
    private _hasFormattingRules;
    convert(model: ReportViewModel, convertBindingsToExpressions?: string): void;
    private _generateStyleName;
    private _createBindingExpression;
    private _tryToGenerateBindingExpressions;
    private _resetDataBindings;
    private _mapPaddingObj;
    private _mapFontObj;
    private _splitFontPropertyValue;
    private _splitPaddingPropertyValue;
    private _patchRuleCondition;
    private _tryToGenerateFormattingRulesExpressions;
    private _getControlDataSourceDataMember;
    private _generateFormattingRulesDictionary;
    private _createRuleExpression;
    private _canConvertReport;
    private _applyChanges;
    private _cancel;
}
